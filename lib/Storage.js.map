{"version":3,"sources":["../src/Storage.js"],"names":["STORAGE_DRIVERS","DRIVERS","MEMORY","LOCALSTORAGE","SESSIONSTORAGE","DOMAINSTORAGE","STORAGE_INTERFACE","driver","window","localStorage","sessionStorage","_storage","dd","biz","util","domainStorage","clear","clearItems","e","defaultConfig","Promise","Storage","options","config","interface","key","value","setItem","error","reject","resolve","getItem","removeItem"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;;;;;AAEA,IAAMA,kBAAkB,CACtB,QADsB,EAEtB,cAFsB,EAGtB,gBAHsB,EAItB,eAJsB,CAAxB;;AAOA,IAAMC,UAAU;AACdC,UAAQ,QADM;AAEdC,gBAAc,cAFA;AAGdC,kBAAgB,gBAHF;AAId;AACAC,iBAAe;AALD,CAAhB;;QAQSJ,O,GAAAA,O;;;AAET,IAAMK,oBAAoB,EAA1B;;;;;;;AAEA,uBAAmBN,eAAnB,8HAAoC;AAAA,QAA3BO,MAA2B;;AAClC,YAAQA,MAAR;AACE,WAAK,QAAL;AACA;AACED,0BAAkBC,MAAlB,IAA4B,wBAAcA,MAAd,CAA5B;AACA;AACF,WAAK,cAAL;AACE,YAAI,QAAOC,MAAP,yCAAOA,MAAP,OAAkB,QAAlB,IAA8BA,OAAOC,YAAzC,EAAuD;AACrDH,4BAAkBC,MAAlB,IAA4BC,OAAOC,YAAnC;AACD,SAFD,MAEO;AACLH,4BAAkBC,MAAlB,IAA4B,wBAAcA,MAAd,CAA5B;AACD;AACD;AACF,WAAK,gBAAL;AACE,YAAI,QAAOC,MAAP,yCAAOA,MAAP,OAAkB,QAAlB,IAA8BA,OAAOE,cAAzC,EAAyD;AACvDJ,4BAAkBC,MAAlB,IAA4BC,OAAOE,cAAnC;AACD,SAFD,MAEO;AACLJ,4BAAkBC,MAAlB,IAA4B,wBAAcA,MAAd,CAA5B;AACD;AACD;AACF,WAAK,eAAL;AACE,YAAI;AAAA;AACF,gBAAII,WAAWC,GAAGC,GAAH,CAAOC,IAAP,CAAYC,aAA3B;AACA,wCAAOJ,QAAP,EAAiB;AACfK,mBADe,mBACP;AACNL,yBAASM,UAAT;AACD;AAHc,aAAjB;AAKAX,8BAAkBC,MAAlB,IAA4BI,QAA5B;AAPE;AAQH,SARD,CAQE,OAAOO,CAAP,EAAU;AACVZ,4BAAkBC,MAAlB,IAA4B,wBAAcA,MAAd,CAA5B;AACD;AACD;AA/BJ;AAiCD;;;;;;;;;;;;;;;;AAED,IAAMY,gBAAgB;AACpBZ,UAAQN,QAAQE,YADI;AAEpBiB,WAASZ,OAAOY;AAFI,CAAtB;;IAKqBC,O;AACnB,qBAA0B;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AACxB,SAAKC,MAAL,GAAc,4BAAOJ,aAAP,EAAsBG,OAAtB,CAAd;AACA;AACA,SAAKE,SAAL,GAAkBlB,kBAAkB,KAAKiB,MAAL,CAAYhB,MAA9B,CAAlB;AACA,SAAKa,OAAL,GAAe,KAAKG,MAAL,CAAYH,OAA3B;AACD;;;;4BACOK,G,EAAKC,K,EAAO;AAClB,UAAI;AACF,aAAKF,SAAL,CAAeG,OAAf,CAAuBF,GAAvB,EAA4BC,KAA5B;AACD,OAFD,CAEE,OAAOE,KAAP,EAAc;AACd,eAAO,KAAKR,OAAL,CAAaS,MAAb,CAAoBD,KAApB,CAAP;AACD;AACD,aAAO,KAAKR,OAAL,CAAaU,OAAb,EAAP;AACD;;;4BACOL,G,EAAK;AACX,aAAO,KAAKL,OAAL,CAAaU,OAAb,CAAqB,KAAKN,SAAL,CAAeO,OAAf,CAAuBN,GAAvB,CAArB,CAAP;AACD;;;+BACUA,G,EAAK;AACd,WAAKD,SAAL,CAAeQ,UAAf,CAA0BP,GAA1B;AACA,aAAO,KAAKL,OAAL,CAAaU,OAAb,EAAP;AACD;;;4BACO;AACN,WAAKN,SAAL,CAAeR,KAAf;AACA,aAAO,KAAKI,OAAL,CAAaU,OAAb,EAAP;AACD;;;;;;kBAzBkBT,O","file":"Storage.js","sourcesContent":["import assign from 'object-assign';\nimport Interface from './Interface';\n\nconst STORAGE_DRIVERS = [\n  'MEMORY',\n  'LOCALSTORAGE',\n  'SESSIONSTORAGE',\n  'DOMAINSTORAGE',\n];\n\nconst DRIVERS = {\n  MEMORY: 'MEMORY',\n  LOCALSTORAGE: 'LOCALSTORAGE',\n  SESSIONSTORAGE: 'SESSIONSTORAGE',\n  // available under dingtalk env\n  DOMAINSTORAGE: 'DOMAINSTORAGE'\n};\n\nexport { DRIVERS };\n\nconst STORAGE_INTERFACE = {};\n\nfor (let driver of STORAGE_DRIVERS) {\n  switch (driver) {\n    case 'MEMORY':\n    default:\n      STORAGE_INTERFACE[driver] = new Interface(driver);\n      break;\n    case 'LOCALSTORAGE':\n      if (typeof window === 'object' && window.localStorage) {\n        STORAGE_INTERFACE[driver] = window.localStorage;\n      } else {\n        STORAGE_INTERFACE[driver] = new Interface(driver);\n      }\n      break;\n    case 'SESSIONSTORAGE':\n      if (typeof window === 'object' && window.sessionStorage) {\n        STORAGE_INTERFACE[driver] = window.sessionStorage;\n      } else {\n        STORAGE_INTERFACE[driver] = new Interface(driver);\n      }\n      break;\n    case 'DOMAINSTORAGE':\n      try {\n        let _storage = dd.biz.util.domainStorage;\n        assign(_storage, {\n          clear() {\n            _storage.clearItems();\n          }\n        });\n        STORAGE_INTERFACE[driver] = _storage;\n      } catch (e) {\n        STORAGE_INTERFACE[driver] = new Interface(driver);\n      }\n      break;\n  }\n}\n\nconst defaultConfig = {\n  driver: DRIVERS.LOCALSTORAGE,\n  Promise: window.Promise,\n};\n\nexport default class Storage {\n  constructor(options = {}) {\n    this.config = assign(defaultConfig, options);\n    // set storage interface\n    this.interface =  STORAGE_INTERFACE[this.config.driver];\n    this.Promise = this.config.Promise;\n  }\n  setItem(key, value) {\n    try {\n      this.interface.setItem(key, value);\n    } catch (error) {\n      return this.Promise.reject(error);\n    }\n    return this.Promise.resolve();\n  }\n  getItem(key) {\n    return this.Promise.resolve(this.interface.getItem(key));\n  }\n  removeItem(key) {\n    this.interface.removeItem(key);\n    return this.Promise.resolve();\n  }\n  clear() {\n    this.interface.clear();\n    return this.Promise.resolve();\n  }\n}"]}